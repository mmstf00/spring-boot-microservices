spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes[0]:
        id: product-service
        uri: lb://product-service # API Gateway also acts as a LB
        predicates[0]: Path=/api/product
      routes[1]:
        id: order-service
        uri: lb://order-service
        predicates[0]: Path=/api/order
      routes[2]:
        id: inventory-service
        uri: lb://inventory-service
        predicates[0]: Path=/api/inventory
      routes[3]:
        id: discovery-server
        uri: http://localhost:8761
        predicates[0]: Path=/eureka/web
        filters[0]: SetPath=/
      routes[4]:
        id: discovery-server-static
        uri: http://localhost:8761
        predicates[0]: Path=/eureka/**
  security:
    oauth2:
      resourceserver:
        jwt:
          # Spring Boot will read the openid configuration and will fetch
          # all the endpoints to make an authorization
          issuer-uri: http://localhost:8181/realms/spring-boot-microservices-realm

# Eureka client config
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

# Increase the logging level
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: INFO
    org.springframework.cloud.gateway: TRACE