spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/order-service
    username: postgres
    password: 1234
  jackson:
    serialization:
      fail-on-empty-beans: false
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
      jakarta:
        persistence:
          sharedCache:
            mode: UNSPECIFIED
    open-in-view: off
  application:
    name: order-service
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.project.orderservice.event.OrderPlacedEvent

server:
  port: 8081

# Eureka client config
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

# Enable Actuator
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        # The actuator will expose all kind of endpoints
        include: "*"
  endpoint:
    health:
      show-details: always
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0

# Resilience4J Properties
resilience4j:
  circuitbreaker:
    instances:
      # Can be any name below, just should be used the same name in @TimeLimiter and @CircuitBreaker
      inventory:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5           # After 5 failing requests CircuitBreaker will change its state from Closed to Open
        failureRateThreshold: 50       # 50% Failure threshold
        waitDurationInOpenState: 5s    # Resilience4J will wait 5 seconds on open state before changing it to Half-Open
        permittedNumberOfCallsInHalfOpenState: 3 # Number of allowed calls in Half-Open state
        automaticTransitionFromOpenToHalfOpenEnabled: true

  # Resilience4J Timeout Properties
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s

  # Resilience4J Retry Properties
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]"