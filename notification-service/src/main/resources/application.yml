spring:
  application:
    name: notification-service
  banner:
    location: classpath:banner.txt
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    consumer:
      group-id: notificationId
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              # The "event" is random token, but should be the same at Producer and Consumer side
              mapping: event:com.project.notificationservice.event.OrderPlacedEvent

server:
  port: 0

# Eureka client config
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka

# Actuator Properties
management:
  endpoints:
    web:
      exposure:
        include: prometheus
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans/
  tracing:
    sampling:
      probability: '1'

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

